.row
  .col-md-2
    %ul.nav.nav-pills.nav-stacked.nav-stacked-menu
      %li.active
        = link_to '#tab-edit', 'data-toggle' => 'tab' do
          %i.icon-edit
          = t('.group')
      %li
        = link_to '#tab-projects', 'data-toggle' => 'tab' do
          %i.icon-folder-close
          = t('projects', scope: 'public.projects.index')
      %li
        = link_to '#tab-remove', 'data-toggle' => 'tab' do
          %i.icon-remove-sign
          = t('general.remove')

  .col-md-10
    .tab-content
      .tab-pane.active#tab-edit
        .ui-box
          .title
            %strong= @group.name
            #{t('.group_settings')}:
          %div.form-holder
            = form_for @group, html: { multipart: true, class: "form-horizontal" }, authenticity_token: true do |f|
              - if @group.errors.any?
                .alert.alert-danger
                  %span= @group.errors.full_messages.first
              .form-group
                = f.label :name, class: 'control-label' do
                  = Group.human_attribute_name('group_name')
                .col-sm-10
                  = f.text_field :name, placeholder: t('ex_opensource', scope: 'groups.new'), class: "form-control left"

              .form-group.group-description-holder
                = f.label :description, Group.human_attribute_name('details'), class: 'control-label'
                .col-sm-10
                  = f.text_area :description, maxlength: 250, class: "form-control js-gfm-input", rows: 4

              .form-group
                .col-sm-2
                .col-sm-10
                  = image_tag group_icon(@group.to_param), alt: '', class: 'avatar s160'
                  %p.light
                    - if @group.avatar?
                      = t('.you_can_change_your_group_avatar')
                    - else
                      = t('.you_can_upload_an_group_avatar')
                  %a.choose-btn.btn.btn-small.js-choose-group-avatar-button
                    %i.icon-paper-clip
                    %span= t('choose_file', scope: 'profiles.show')
                  &nbsp;
                  %span.file_name.js-avatar-filename= t('file_name', scope: 'profiles.show')
                  = f.file_field :avatar, class: "js-group-avatar-input hidden"
                  .light= t('the_maximum_file_size', scope: 'profiles.show')
                  - if @group.avatar?
                    %hr
                    = link_to t('remove_avatar', scope: 'profiles.show'), group_avatar_path(@group.to_param), data: { confirm: t('.group_avatar_will_be_removed') }, method: :delete, class: "btn btn-remove btn-small remove-avatar"

              .form-actions
                = f.submit t('.save_group'), class: "btn btn-save"

      .tab-pane#tab-projects
        .ui-box
          .title
            %strong= @group.name
            #{t('projects', scope: 'profiles.groups.index')}:
            - if can? current_user, :manage_group, @group
              %span.pull-right
                = link_to new_project_path(namespace_id: @group.id), class: "btn btn-tiny" do
                  %i.icon-plus
                  = t('.new_project')
          %ul.well-list
            - @group.projects.each do |project|
              %li
                = visibility_level_icon(project.visibility_level)
                = link_to project.name_with_namespace, project
                .pull-right
                  = link_to t('members', scope: 'projects.settings_nav'), project_team_index_path(project), id: "edit_#{dom_id(project)}", class: "btn btn-small"
                  = link_to t('general.edit'), edit_project_path(project), id: "edit_#{dom_id(project)}", class: "btn btn-small"
                  = link_to t('general.remove'), project, data: { confirm: remove_project_message(project)}, method: :delete, class: "btn btn-small btn-remove"
            - if @group.projects.blank?
              .nothing-here-block= t('.this_group_has_no_projects_yet')

      .tab-pane#tab-remove
        .ui-box.ui-box-danger
          .title= t('.remove_group')
          .body
            %p
              = t('.removing_group_will_removed_resources')
            %p
              %strong= t('.removed_group_can_not_be_restored')

            = link_to t('.remove_group').titleize, @group, data: {confirm: t('.removed_group_can_not_be_restored_sure') }, method: :delete, class: "btn btn-remove"
