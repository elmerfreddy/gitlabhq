.project-edit-container
  .project-edit-errors
  .project-edit-content
    %div
      %h3.page-title
        #{t('.project_settings')}:
      %p.light= t('.some_settings_transfer_hidden')
      %hr
      .form-holder
        = form_for @project, remote: true, html: { class: "edit_project form-horizontal" } do |f|
          %fieldset
            .form-group.project_name_holder
              = f.label :name, class: 'control-label' do
                = Project.human_attribute_name('project_name')
              .col-sm-10
                = f.text_field :name, placeholder: t('example_project', scope: 'projects.new'), class: "form-control"


            .form-group
              = f.label :description, class: 'control-label' do
                = Project.human_attribute_name('project_description')
                %span.light (#{t('general.optional')})
              .col-sm-10
                = f.text_area :description, placeholder: t('awesome_project', scope: 'projects.new'), class: "form-control", rows: 3, maxlength: 250

            - if @project.repository.exists? && @project.repository.branch_names.any?
              .form-group
                = f.label :default_branch, t('.default_branch'), class: 'control-label'
                .col-sm-10= f.select(:default_branch, @repository.branch_names, {}, {class: 'select2 select-wide'})


          = render "visibility_level", f: f, visibility_level: @project.visibility_level, can_change_visibility_level: can?(current_user, :change_visibility_level, @project)

          %fieldset.features
            %legend
              #{t('general.labels')}:
            .form-group
              = f.label :label_list, t('general.labels'), class: 'control-label'
              .col-sm-10
                = f.text_field :label_list, maxlength: 2000, class: "form-control"
                %p.hint= t('.separate_labels_with_commas')

          %fieldset.features
            %legend
              #{t('general.features')}:
            .form-group
              = f.label :issues_enabled, t('general.issues'), class: 'control-label'
              .col-sm-10
                .checkbox
                  = f.check_box :issues_enabled
                  %span.descr= t('.lightweight_issue_tracking')

            - if Project.issues_tracker.values.count > 1
              .form-group
                = f.label :issues_tracker, t('.issues_tracker'), class: 'control-label'
                .col-sm-10= f.select(:issues_tracker, project_issues_trackers(@project.issues_tracker), {}, { disabled: !@project.issues_enabled })

              .form-group
                = f.label :issues_tracker_id, t('.project_name_or_id'), class: 'control-label'
                .col-sm-10= f.text_field :issues_tracker_id, disabled: !@project.can_have_issues_tracker_id?, class: 'form-control'

            .form-group
              = f.label :merge_requests_enabled, t('general.merge_requests'), class: 'control-label'
              .col-sm-10
                .checkbox
                  = f.check_box :merge_requests_enabled
                  %span.descr= t('.submit_changes_to_be_merged_upstream')

            .form-group
              = f.label :wiki_enabled, t('general.wiki'), class: 'control-label'
              .col-sm-10
                .checkbox
                  = f.check_box :wiki_enabled
                  %span.descr= t('.pages_for_project_documentation')

            .form-group
              = f.label :wall_enabled, t('general.wall'), class: 'control-label'
              .col-sm-10
                .checkbox
                  = f.check_box :wall_enabled
                  %span.descr= t('.simple_chat_system')

            .form-group
              = f.label :snippets_enabled, t('general.snippets'), class: 'control-label'
              .col-sm-10
                .checkbox
                  = f.check_box :snippets_enabled
                  %span.descr= t('share_code_pastes', scope: 'snippets.current_user_index')

          .form-actions
            = f.submit t('general.save_changes'), class: "btn btn-save"



    .danger-settings.js-toggle-container
      .centered-light-block
        %h3
          %i.icon-warning-sign
          = t('.dangerous_settings')

        %p= t('.project_settings_below_may_result_in_data_loss')
        = link_to '#', class: 'btn js-toggle-button' do
          = t('.show_it_to_me')
          %i.icon-chevron-down

      .js-toggle-content.hide
        - if can? current_user, :archive_project, @project
          .ui-box.ui-box-danger
            .title
              - if @project.archived?
                = t('.unarchive_project')
              - else
                = t('.archive_project')
            .body
              - if @project.archived?
                %p
                  = t('.unarchiving_the_project')
                  %br
                  = t('.the_project_can_be_commited_to')
                  %br
                  %strong= t('.once_active_this_project')
                = link_to t('general.unarchive'), unarchive_project_path(@project),
                    data: { confirm: raw(t('.are_you_sure_unarchive')) },
                    method: :post, class: "btn btn-remove"
              - else
                %p
                  = t('.archiving_the_project')
                  %br
                  = t('.it_is_hidden')
                  %br
                  %strong= t('.archived_project')
                = link_to t('general.archive'), archive_project_path(@project),
                    data: { confirm: t('.are_you_sure_archive') },
                    method: :post, class: "btn btn-remove"
        - else
          .nothing-here-block= t('.only_project_owner')

        - if can?(current_user, :change_namespace, @project)
          .ui-box.ui-box-danger
            .title= t('.transfer_project')
            .errors-holder
            .form-holder
              = form_for(@project, url: transfer_project_path(@project), method: :put, remote: true, html: { class: 'transfer-project form-horizontal' }) do |f|
                .form-group
                  = f.label :namespace_id, class: 'control-label' do
                    %span= Project.human_attribute_name('namespace')
                  .col-sm-10
                    .form-group
                      = f.select :namespace_id, namespaces_options(@project.namespace_id), { prompt: t('.choose_a_project_namespace') }, { class: 'select2' }
                    %ul
                      %li= t('.be_careful')
                      %li= t('.you_can_only_transfer')
                      %li= t('.you_will_need_to_update')
                .form-actions
                  = f.submit t('general.transfer'), class: "btn btn-remove"
        - else
          .nothing-here-block= t('.only_project_owner_transfer')

        .ui-box.ui-box-danger
          .title= t('.rename_repository')
          .errors-holder
          .form-holder
            = form_for(@project, html: { class: 'form-horizontal' }) do |f|
              .form-group
                = f.label :path, class: 'control-label' do
                  %span= t('.path')
                .col-sm-9
                  .form-group
                    .input-group
                      = f.text_field :path, class: 'form-control'
                      %span.input-group-addon .git
                  %ul
                    %li= t('.be_careful_renaming')
                    %li= t('.you_will_need_to_update')
              .form-actions
                = f.submit t('general.rename'), class: "btn btn-remove"

        - if can?(current_user, :remove_project, @project)
          .ui-box.ui-box-danger
            .title= t('.remove_project')
            .body
              %p
                = t('.removing_the_project_will_delete')
                %br
                %strong= t('.removed_projects_cannot_be_restored')

              = link_to t('.remove_project'), @project, data: { confirm: remove_project_message(@project) }, method: :delete, class: "btn btn-remove"
        - else
          .nothing-here-block Only project owner can remove a project

.save-project-loader.hide
  %center
    %h2
      %i.icon-spinner.icon-spin
      Saving project.
    %p Please wait a moment, this page will automatically refresh when ready.
